@using System
@using System.Linq
@using System.Security.Claims
@using System.Web
@using Microsoft.Owin.Security
@{
    var authentication = Context.GetOwinContext().Authentication;
}

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Login</title>
</head>
<body>
    <h1>Authorization Server</h1>
    <form method="POST">
        <h2>Forms Login</h2>
        <ul>
            <li>
                <label for="username">Usuário: </label>
                <input type="text" id="username" name="username" />
            </li>
            <li>
                <label for="password">Senha: </label>
                <input type="password" id="password" name="password" />
            </li>
            <li>
                <input type="checkbox" id="isPersistent" name="isPersistent" />
                <label for="isPersistent">Lembrar-me</label>
                <input type="submit" name="acao" value="Autenticar" />
            </li>
            <label style="color:red">@TempData["Message"]</label>
        </ul>
    </form>
    <form method="POST" action="/Account/External?@Request.QueryString">
        <h2>Login externo</h2>
        <ul>
            @foreach (var description in authentication.GetAuthenticationTypes().Where(d => !String.IsNullOrEmpty(d.Caption)))
            {
                <li>
                    <input type="submit" name="provider" value="@description.Caption" />
                </li>
            }
        </ul>
    </form>
</body>
</html>